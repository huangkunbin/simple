// Code generated by simpleapi. DO NOT EDIT.
package role_api

import (
	"google.golang.org/protobuf/proto"
	"simple/pkg/simpleapi"
	"simple/pkg/simplenet"
)

func (s *RoleApi) ServiceID() byte {
	return 1
}
func (s *RoleApi) NewRequest(id byte) simpleapi.Message {
	switch id {
	case 1:
		return &LoginReq{}
	case 2:
		return &CreateReq{}
	}
	return nil
}
func (s *RoleApi) NewResponse(id byte) simpleapi.Message {
	switch id {
	case 1:
		return &LoginRes{}
	case 2:
		return &CreateRes{}
	}
	return nil
}
func (s *RoleApi) HandleRequest(session simplenet.ISession, req simpleapi.Message) {
	switch req.MessageID() {
	case 1:
		session.Send(s.Login(session, req.(*LoginReq)))
	case 2:
		session.Send(s.Create(session, req.(*CreateReq)))
	default:
		panic("Unhandled Message Type")
	}
}
func (m *LoginReq) ServiceID() byte {
	return 1
}
func (m *LoginReq) MessageID() byte {
	return 1
}
func (m *LoginReq) Identity() string {
	return "RoleApi.LoginReq"
}
func (m *LoginReq) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}
func (m *LoginReq) Unmarshal(p []byte) error {
	return proto.Unmarshal(p, m)
}
func (m *CreateReq) ServiceID() byte {
	return 1
}
func (m *CreateReq) MessageID() byte {
	return 2
}
func (m *CreateReq) Identity() string {
	return "RoleApi.CreateReq"
}
func (m *CreateReq) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}
func (m *CreateReq) Unmarshal(p []byte) error {
	return proto.Unmarshal(p, m)
}
func (m *LoginRes) ServiceID() byte {
	return 1
}
func (m *LoginRes) MessageID() byte {
	return 1
}
func (m *LoginRes) Identity() string {
	return "RoleApi.LoginRes"
}
func (m *LoginRes) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}
func (m *LoginRes) Unmarshal(p []byte) error {
	return proto.Unmarshal(p, m)
}
func (m *CreateRes) ServiceID() byte {
	return 1
}
func (m *CreateRes) MessageID() byte {
	return 2
}
func (m *CreateRes) Identity() string {
	return "RoleApi.CreateRes"
}
func (m *CreateRes) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}
func (m *CreateRes) Unmarshal(p []byte) error {
	return proto.Unmarshal(p, m)
}
